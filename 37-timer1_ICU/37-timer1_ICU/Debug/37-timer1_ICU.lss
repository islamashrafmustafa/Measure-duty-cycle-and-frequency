
37-timer1_ICU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000009cc  00000a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010e7  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b3  00000000  00000000  00001c87  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000917  00000000  00000000  0000243a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000168  00000000  00000000  00002d54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e0  00000000  00000000  00002ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a69  00000000  00000000  0000339c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00003e05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ec       	ldi	r30, 0xCC	; 204
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 11 02 	call	0x422	; 0x422 <main>
  7a:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_vsetPINDir>:
		break ;
		case 'C' :
		DDRC=direction; //set the direction of port C
		break ;
		case 'D':
		DDRD=direction; //set the direction of port D
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_vsetPINDir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_vsetPINDir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_vsetPINDir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_vsetPINDir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_vsetPINDir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_vsetPINDir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_vsetPINDir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_vsetPINDir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_vsetPINDir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_vsetPINDir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_vsetPINDir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_vsetPINDir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_vsetPINDir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_vsetPINDir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_vsetPINDir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_vsetPINDir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_vsetPINDir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_vsetPINDir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_vsetPINDir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_vsetPINDir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_vsetPINDir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_vsetPINDir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_vsetPINDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_vsetPINDir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_vsetPINDir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_vsetPINDir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_write>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	19 f1       	breq	.+70     	; 0x1ac <DIO_write+0x4a>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_write+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_write+0x18>
 16c:	08 95       	ret
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	b1 f1       	breq	.+108    	; 0x1de <DIO_write+0x7c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_write+0x16>
 176:	4c c0       	rjmp	.+152    	; 0x210 <DIO_write+0xae>
 178:	08 95       	ret
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	59 f4       	brne	.+22     	; 0x194 <DIO_write+0x32>
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_write+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_write+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	2b b3       	in	r18, 0x1b	; 27
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_write+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_write+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
 1ac:	41 30       	cpi	r20, 0x01	; 1
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <DIO_write+0x64>
 1b0:	28 b3       	in	r18, 0x18	; 24
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_write+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_write+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	08 95       	ret
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_write+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_write+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 30       	cpi	r20, 0x01	; 1
 1e0:	59 f4       	brne	.+22     	; 0x1f8 <DIO_write+0x96>
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_write+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_write+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	25 b3       	in	r18, 0x15	; 21
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_write+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_write+0x9e>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
 210:	41 30       	cpi	r20, 0x01	; 1
 212:	59 f4       	brne	.+22     	; 0x22a <DIO_write+0xc8>
 214:	22 b3       	in	r18, 0x12	; 18
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_write+0xbe>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_write+0xba>
 224:	82 2b       	or	r24, r18
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_write+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_write+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <DIO_write_port>:
	}
	
}
void DIO_write_port(unsigned char portname,unsigned char portvalue)
{
	switch(portname)
 242:	82 34       	cpi	r24, 0x42	; 66
 244:	59 f0       	breq	.+22     	; 0x25c <DIO_write_port+0x1a>
 246:	18 f4       	brcc	.+6      	; 0x24e <DIO_write_port+0xc>
 248:	81 34       	cpi	r24, 0x41	; 65
 24a:	31 f0       	breq	.+12     	; 0x258 <DIO_write_port+0x16>
 24c:	08 95       	ret
 24e:	83 34       	cpi	r24, 0x43	; 67
 250:	39 f0       	breq	.+14     	; 0x260 <DIO_write_port+0x1e>
 252:	84 34       	cpi	r24, 0x44	; 68
 254:	39 f0       	breq	.+14     	; 0x264 <DIO_write_port+0x22>
 256:	08 95       	ret
	{
		case 'A' :
		PORTA=portvalue; //Write the given value to the port A
 258:	6b bb       	out	0x1b, r22	; 27
		break ;
 25a:	08 95       	ret
		case 'B':
		PORTB=portvalue; //Write the given value to the port B
 25c:	68 bb       	out	0x18, r22	; 24
		break ;
 25e:	08 95       	ret
		case 'C' :
		PORTC=portvalue; //Write the given value to the port C
 260:	65 bb       	out	0x15, r22	; 21
		break ;
 262:	08 95       	ret
		case 'D':
		PORTD=portvalue; //Write the given value to the port D
 264:	62 bb       	out	0x12, r22	; 18
 266:	08 95       	ret

00000268 <send_falling_edge>:
}


static void send_falling_edge(void)
{
	DIO_write('B',EN,1);
 268:	41 e0       	ldi	r20, 0x01	; 1
 26a:	60 e0       	ldi	r22, 0x00	; 0
 26c:	82 e4       	ldi	r24, 0x42	; 66
 26e:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 272:	8f e9       	ldi	r24, 0x9F	; 159
 274:	9f e0       	ldi	r25, 0x0F	; 15
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <send_falling_edge+0xe>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <send_falling_edge+0x14>
 27c:	00 00       	nop
	_delay_ms(2);
	DIO_write('B',EN,0);
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	82 e4       	ldi	r24, 0x42	; 66
 284:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
 288:	8f e9       	ldi	r24, 0x9F	; 159
 28a:	9f e0       	ldi	r25, 0x0F	; 15
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <send_falling_edge+0x24>
 290:	00 c0       	rjmp	.+0      	; 0x292 <send_falling_edge+0x2a>
 292:	00 00       	nop
 294:	08 95       	ret

00000296 <LCD_vSend_cmd>:
	_delay_ms(2);
}
void LCD_vSend_cmd(char cmd)
{
	#if defined eight_bits_mode
	DIO_write_port('A',cmd);
 296:	68 2f       	mov	r22, r24
 298:	81 e4       	ldi	r24, 0x41	; 65
 29a:	0e 94 21 01 	call	0x242	; 0x242 <DIO_write_port>
	DIO_write('B',RS,0);
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	82 e4       	ldi	r24, 0x42	; 66
 2a4:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 2a8:	0e 94 34 01 	call	0x268	; 0x268 <send_falling_edge>
 2ac:	8f ec       	ldi	r24, 0xCF	; 207
 2ae:	97 e0       	ldi	r25, 0x07	; 7
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <LCD_vSend_cmd+0x1a>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <LCD_vSend_cmd+0x20>
 2b6:	00 00       	nop
 2b8:	08 95       	ret

000002ba <LCD_vInit>:
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	81 ee       	ldi	r24, 0xE1	; 225
 2be:	94 e0       	ldi	r25, 0x04	; 4
 2c0:	21 50       	subi	r18, 0x01	; 1
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <LCD_vInit+0x6>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_vInit+0x10>
 2ca:	00 00       	nop

void LCD_vInit(void)
{
	_delay_ms(200);
	#if defined eight_bits_mode
	DIO_vsetPINDir('A',0,1);
 2cc:	41 e0       	ldi	r20, 0x01	; 1
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	81 e4       	ldi	r24, 0x41	; 65
 2d2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',1,1);
 2d6:	41 e0       	ldi	r20, 0x01	; 1
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	81 e4       	ldi	r24, 0x41	; 65
 2dc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',2,1);
 2e0:	41 e0       	ldi	r20, 0x01	; 1
 2e2:	62 e0       	ldi	r22, 0x02	; 2
 2e4:	81 e4       	ldi	r24, 0x41	; 65
 2e6:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',3,1);
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	63 e0       	ldi	r22, 0x03	; 3
 2ee:	81 e4       	ldi	r24, 0x41	; 65
 2f0:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',4,1);
 2f4:	41 e0       	ldi	r20, 0x01	; 1
 2f6:	64 e0       	ldi	r22, 0x04	; 4
 2f8:	81 e4       	ldi	r24, 0x41	; 65
 2fa:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',5,1);
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	65 e0       	ldi	r22, 0x05	; 5
 302:	81 e4       	ldi	r24, 0x41	; 65
 304:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',6,1);
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	66 e0       	ldi	r22, 0x06	; 6
 30c:	81 e4       	ldi	r24, 0x41	; 65
 30e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',7,1);
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	67 e0       	ldi	r22, 0x07	; 7
 316:	81 e4       	ldi	r24, 0x41	; 65
 318:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',EN,1);
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	82 e4       	ldi	r24, 0x42	; 66
 322:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',RW,1);
 326:	41 e0       	ldi	r20, 0x01	; 1
 328:	62 e0       	ldi	r22, 0x02	; 2
 32a:	82 e4       	ldi	r24, 0x42	; 66
 32c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',RS,1);
 330:	41 e0       	ldi	r20, 0x01	; 1
 332:	61 e0       	ldi	r22, 0x01	; 1
 334:	82 e4       	ldi	r24, 0x42	; 66
 336:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_write('B',RW,0);
 33a:	40 e0       	ldi	r20, 0x00	; 0
 33c:	62 e0       	ldi	r22, 0x02	; 2
 33e:	82 e4       	ldi	r24, 0x42	; 66
 340:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	LCD_vSend_cmd(EIGHT_BITS); //8 bit mode
 344:	88 e3       	ldi	r24, 0x38	; 56
 346:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 34a:	8f ec       	ldi	r24, 0xCF	; 207
 34c:	97 e0       	ldi	r25, 0x07	; 7
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <LCD_vInit+0x94>
 352:	00 c0       	rjmp	.+0      	; 0x354 <LCD_vInit+0x9a>
 354:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAN_ON);//display on cursor on
 356:	8e e0       	ldi	r24, 0x0E	; 14
 358:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 35c:	8f ec       	ldi	r24, 0xCF	; 207
 35e:	97 e0       	ldi	r25, 0x07	; 7
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <LCD_vInit+0xa6>
 364:	00 c0       	rjmp	.+0      	; 0x366 <LCD_vInit+0xac>
 366:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 36e:	8f e1       	ldi	r24, 0x1F	; 31
 370:	9e e4       	ldi	r25, 0x4E	; 78
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <LCD_vInit+0xb8>
 376:	00 c0       	rjmp	.+0      	; 0x378 <LCD_vInit+0xbe>
 378:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
 37a:	86 e0       	ldi	r24, 0x06	; 6
 37c:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 380:	8f ec       	ldi	r24, 0xCF	; 207
 382:	97 e0       	ldi	r25, 0x07	; 7
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <LCD_vInit+0xca>
 388:	00 c0       	rjmp	.+0      	; 0x38a <LCD_vInit+0xd0>
 38a:	00 00       	nop
 38c:	08 95       	ret

0000038e <LCD_vSend_char>:
}

void LCD_vSend_char(char data)
{
	#if defined eight_bits_mode
	DIO_write_port('A',data);
 38e:	68 2f       	mov	r22, r24
 390:	81 e4       	ldi	r24, 0x41	; 65
 392:	0e 94 21 01 	call	0x242	; 0x242 <DIO_write_port>
	DIO_write('B',RS,1);
 396:	41 e0       	ldi	r20, 0x01	; 1
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	82 e4       	ldi	r24, 0x42	; 66
 39c:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 3a0:	0e 94 34 01 	call	0x268	; 0x268 <send_falling_edge>
 3a4:	8f ec       	ldi	r24, 0xCF	; 207
 3a6:	97 e0       	ldi	r25, 0x07	; 7
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <LCD_vSend_char+0x1a>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <LCD_vSend_char+0x20>
 3ae:	00 00       	nop
 3b0:	08 95       	ret

000003b2 <LCD_vSend_string>:
	_delay_ms(1);
}


void LCD_vSend_string(char *data)
{
 3b2:	cf 93       	push	r28
 3b4:	df 93       	push	r29
 3b6:	ec 01       	movw	r28, r24
	while((*data)!='\0')
 3b8:	03 c0       	rjmp	.+6      	; 0x3c0 <LCD_vSend_string+0xe>
	{
		LCD_vSend_char(*data);
 3ba:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
		data++;
 3be:	21 96       	adiw	r28, 0x01	; 1
}


void LCD_vSend_string(char *data)
{
	while((*data)!='\0')
 3c0:	88 81       	ld	r24, Y
 3c2:	81 11       	cpse	r24, r1
 3c4:	fa cf       	rjmp	.-12     	; 0x3ba <LCD_vSend_string+0x8>
	{
		LCD_vSend_char(*data);
		data++;
	}
}
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <LCD_clearscreen>:
void LCD_clearscreen()
{
	LCD_vSend_cmd(CLR_SCREEN);
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 3d2:	8f e1       	ldi	r24, 0x1F	; 31
 3d4:	9e e4       	ldi	r25, 0x4E	; 78
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <LCD_clearscreen+0xa>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <LCD_clearscreen+0x10>
 3dc:	00 00       	nop
 3de:	08 95       	ret

000003e0 <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 3e0:	9f ef       	ldi	r25, 0xFF	; 255
 3e2:	98 0f       	add	r25, r24
 3e4:	92 30       	cpi	r25, 0x02	; 2
 3e6:	70 f4       	brcc	.+28     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3e8:	61 31       	cpi	r22, 0x11	; 17
 3ea:	70 f4       	brcc	.+28     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3ec:	66 23       	and	r22, r22
 3ee:	71 f0       	breq	.+28     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
	{
		data=0x80;
	}
	else if(row==1)
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	19 f4       	brne	.+6      	; 0x3fa <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 3f4:	2f e7       	ldi	r18, 0x7F	; 127
 3f6:	26 0f       	add	r18, r22
 3f8:	0a c0       	rjmp	.+20     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
	}
	else if (row==2)
 3fa:	82 30       	cpi	r24, 0x02	; 2
 3fc:	41 f4       	brne	.+16     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
	{
		data=0xc0+coloumn-1;
 3fe:	2f eb       	ldi	r18, 0xBF	; 191
 400:	26 0f       	add	r18, r22
 402:	05 c0       	rjmp	.+10     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 404:	20 e8       	ldi	r18, 0x80	; 128
 406:	03 c0       	rjmp	.+6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 408:	20 e8       	ldi	r18, 0x80	; 128
 40a:	01 c0       	rjmp	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40c:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_vSend_cmd(data);
 40e:	82 2f       	mov	r24, r18
 410:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_vSend_cmd>
 414:	8f ec       	ldi	r24, 0xCF	; 207
 416:	97 e0       	ldi	r25, 0x07	; 7
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
 420:	08 95       	ret

00000422 <main>:


int main(void)
{
  unsigned short a,b,c,high,period,duty_cycle,frequency;
  LCD_vInit();
 422:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_vInit>
  TCCR1A=0;
 426:	1f bc       	out	0x2f, r1	; 47
  TIFR=(1<<ICF1); // Clear the ICF1
 428:	80 e2       	ldi	r24, 0x20	; 32
 42a:	88 bf       	out	0x38, r24	; 56
  TCCR1B=0xc1; // rising edge ,no prescalar ,noise canceler
 42c:	81 ec       	ldi	r24, 0xC1	; 193
 42e:	8e bd       	out	0x2e, r24	; 46
  while((TIFR&(1<<ICF1))==0);
 430:	08 b6       	in	r0, 0x38	; 56
 432:	05 fe       	sbrs	r0, 5
 434:	fd cf       	rjmp	.-6      	; 0x430 <main+0xe>
  a=ICR1; // take the value of capture register
 436:	86 b5       	in	r24, 0x26	; 38
 438:	97 b5       	in	r25, 0x27	; 39
  TIFR=(1<<ICF1); // Clear the ICF1
 43a:	20 e2       	ldi	r18, 0x20	; 32
 43c:	28 bf       	out	0x38, r18	; 56
  TCCR1B=0x81;
 43e:	21 e8       	ldi	r18, 0x81	; 129
 440:	2e bd       	out	0x2e, r18	; 46
  while((TIFR&(1<<ICF1))==0);
 442:	08 b6       	in	r0, 0x38	; 56
 444:	05 fe       	sbrs	r0, 5
 446:	fd cf       	rjmp	.-6      	; 0x442 <main+0x20>
  b=ICR1;
 448:	66 b5       	in	r22, 0x26	; 38
 44a:	77 b5       	in	r23, 0x27	; 39
  TIFR=(1<<ICF1); // Clear the ICF1
 44c:	20 e2       	ldi	r18, 0x20	; 32
 44e:	28 bf       	out	0x38, r18	; 56
  TCCR1B=0xc1; // rising edge ,no prescalar ,noise canceler
 450:	21 ec       	ldi	r18, 0xC1	; 193
 452:	2e bd       	out	0x2e, r18	; 46
  while((TIFR&(1<<ICF1))==0);
 454:	08 b6       	in	r0, 0x38	; 56
 456:	05 fe       	sbrs	r0, 5
 458:	fd cf       	rjmp	.-6      	; 0x454 <main+0x32>
  c=ICR1; // take the value of capture register
 45a:	c6 b4       	in	r12, 0x26	; 38
 45c:	d7 b4       	in	r13, 0x27	; 39
  TIFR=(1<<ICF1); // Clear the ICF1
 45e:	20 e2       	ldi	r18, 0x20	; 32
 460:	28 bf       	out	0x38, r18	; 56
  TCCR1B=0;
 462:	1e bc       	out	0x2e, r1	; 46
  if ((a<b)&&(b<c))
 464:	86 17       	cp	r24, r22
 466:	97 07       	cpc	r25, r23
 468:	08 f0       	brcs	.+2      	; 0x46c <main+0x4a>
 46a:	da c0       	rjmp	.+436    	; 0x620 <main+0x1fe>
 46c:	6c 15       	cp	r22, r12
 46e:	7d 05       	cpc	r23, r13
 470:	08 f0       	brcs	.+2      	; 0x474 <main+0x52>
 472:	d6 c0       	rjmp	.+428    	; 0x620 <main+0x1fe>
  {
	  high=b-a;
 474:	68 1b       	sub	r22, r24
 476:	79 0b       	sbc	r23, r25
	  period=c-a;
 478:	c8 1a       	sub	r12, r24
 47a:	d9 0a       	sbc	r13, r25
	  duty_cycle=((float)high/period)*100;
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 b8 03 	call	0x770	; 0x770 <__floatunsisf>
 484:	4b 01       	movw	r8, r22
 486:	5c 01       	movw	r10, r24
 488:	e1 2c       	mov	r14, r1
 48a:	f1 2c       	mov	r15, r1
 48c:	c7 01       	movw	r24, r14
 48e:	b6 01       	movw	r22, r12
 490:	0e 94 b8 03 	call	0x770	; 0x770 <__floatunsisf>
 494:	9b 01       	movw	r18, r22
 496:	ac 01       	movw	r20, r24
 498:	c5 01       	movw	r24, r10
 49a:	b4 01       	movw	r22, r8
 49c:	0e 94 17 03 	call	0x62e	; 0x62e <__divsf3>
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	48 ec       	ldi	r20, 0xC8	; 200
 4a6:	52 e4       	ldi	r21, 0x42	; 66
 4a8:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsf3>
 4ac:	0e 94 89 03 	call	0x712	; 0x712 <__fixunssfsi>
 4b0:	4b 01       	movw	r8, r22
 4b2:	5c 01       	movw	r10, r24
	  frequency=F_CPU/(period);
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	72 e1       	ldi	r23, 0x12	; 18
 4b8:	8a e7       	ldi	r24, 0x7A	; 122
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	a7 01       	movw	r20, r14
 4be:	96 01       	movw	r18, r12
 4c0:	0e 94 b3 04 	call	0x966	; 0x966 <__udivmodsi4>
 4c4:	69 01       	movw	r12, r18
 4c6:	7a 01       	movw	r14, r20
	  LCD_vSend_string("duty=");
 4c8:	80 e6       	ldi	r24, 0x60	; 96
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_vSend_string>
	  LCD_vSend_char(duty_cycle/10+48);
 4d0:	94 01       	movw	r18, r8
 4d2:	ad ec       	ldi	r26, 0xCD	; 205
 4d4:	bc ec       	ldi	r27, 0xCC	; 204
 4d6:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 4da:	ec 01       	movw	r28, r24
 4dc:	d6 95       	lsr	r29
 4de:	c7 95       	ror	r28
 4e0:	d6 95       	lsr	r29
 4e2:	c7 95       	ror	r28
 4e4:	d6 95       	lsr	r29
 4e6:	c7 95       	ror	r28
 4e8:	8c 2f       	mov	r24, r28
 4ea:	80 5d       	subi	r24, 0xD0	; 208
 4ec:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_char(duty_cycle%10+48);
 4f0:	94 01       	movw	r18, r8
 4f2:	ce 01       	movw	r24, r28
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	cc 0f       	add	r28, r28
 4fa:	dd 1f       	adc	r29, r29
 4fc:	cc 0f       	add	r28, r28
 4fe:	dd 1f       	adc	r29, r29
 500:	cc 0f       	add	r28, r28
 502:	dd 1f       	adc	r29, r29
 504:	8c 0f       	add	r24, r28
 506:	9d 1f       	adc	r25, r29
 508:	28 1b       	sub	r18, r24
 50a:	39 0b       	sbc	r19, r25
 50c:	c9 01       	movw	r24, r18
 50e:	80 5d       	subi	r24, 0xD0	; 208
 510:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_char('%');
 514:	85 e2       	ldi	r24, 0x25	; 37
 516:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_movecursor(2,1);
 51a:	61 e0       	ldi	r22, 0x01	; 1
 51c:	82 e0       	ldi	r24, 0x02	; 2
 51e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_movecursor>
	  LCD_vSend_string("freq=");
 522:	86 e6       	ldi	r24, 0x66	; 102
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_vSend_string>
	  LCD_vSend_char(frequency/1000+48);
 52a:	96 01       	movw	r18, r12
 52c:	36 95       	lsr	r19
 52e:	27 95       	ror	r18
 530:	36 95       	lsr	r19
 532:	27 95       	ror	r18
 534:	36 95       	lsr	r19
 536:	27 95       	ror	r18
 538:	a5 ec       	ldi	r26, 0xC5	; 197
 53a:	b0 e2       	ldi	r27, 0x20	; 32
 53c:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 540:	92 95       	swap	r25
 542:	82 95       	swap	r24
 544:	8f 70       	andi	r24, 0x0F	; 15
 546:	89 27       	eor	r24, r25
 548:	9f 70       	andi	r25, 0x0F	; 15
 54a:	89 27       	eor	r24, r25
 54c:	80 5d       	subi	r24, 0xD0	; 208
 54e:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_char(((frequency/100)%10)+48);
 552:	96 01       	movw	r18, r12
 554:	36 95       	lsr	r19
 556:	27 95       	ror	r18
 558:	36 95       	lsr	r19
 55a:	27 95       	ror	r18
 55c:	ab e7       	ldi	r26, 0x7B	; 123
 55e:	b4 e1       	ldi	r27, 0x14	; 20
 560:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 564:	ac 01       	movw	r20, r24
 566:	56 95       	lsr	r21
 568:	47 95       	ror	r20
 56a:	9a 01       	movw	r18, r20
 56c:	ad ec       	ldi	r26, 0xCD	; 205
 56e:	bc ec       	ldi	r27, 0xCC	; 204
 570:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 574:	96 95       	lsr	r25
 576:	87 95       	ror	r24
 578:	96 95       	lsr	r25
 57a:	87 95       	ror	r24
 57c:	96 95       	lsr	r25
 57e:	87 95       	ror	r24
 580:	9c 01       	movw	r18, r24
 582:	22 0f       	add	r18, r18
 584:	33 1f       	adc	r19, r19
 586:	88 0f       	add	r24, r24
 588:	99 1f       	adc	r25, r25
 58a:	88 0f       	add	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	88 0f       	add	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	82 0f       	add	r24, r18
 594:	93 1f       	adc	r25, r19
 596:	9a 01       	movw	r18, r20
 598:	28 1b       	sub	r18, r24
 59a:	39 0b       	sbc	r19, r25
 59c:	c9 01       	movw	r24, r18
 59e:	80 5d       	subi	r24, 0xD0	; 208
 5a0:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_char(((frequency/10)%10)+48);
 5a4:	96 01       	movw	r18, r12
 5a6:	ad ec       	ldi	r26, 0xCD	; 205
 5a8:	bc ec       	ldi	r27, 0xCC	; 204
 5aa:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 5ae:	ec 01       	movw	r28, r24
 5b0:	d6 95       	lsr	r29
 5b2:	c7 95       	ror	r28
 5b4:	d6 95       	lsr	r29
 5b6:	c7 95       	ror	r28
 5b8:	d6 95       	lsr	r29
 5ba:	c7 95       	ror	r28
 5bc:	9e 01       	movw	r18, r28
 5be:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__umulhisi3>
 5c2:	96 95       	lsr	r25
 5c4:	87 95       	ror	r24
 5c6:	96 95       	lsr	r25
 5c8:	87 95       	ror	r24
 5ca:	96 95       	lsr	r25
 5cc:	87 95       	ror	r24
 5ce:	9c 01       	movw	r18, r24
 5d0:	22 0f       	add	r18, r18
 5d2:	33 1f       	adc	r19, r19
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	88 0f       	add	r24, r24
 5da:	99 1f       	adc	r25, r25
 5dc:	88 0f       	add	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	82 0f       	add	r24, r18
 5e2:	93 1f       	adc	r25, r19
 5e4:	9e 01       	movw	r18, r28
 5e6:	28 1b       	sub	r18, r24
 5e8:	39 0b       	sbc	r19, r25
 5ea:	c9 01       	movw	r24, r18
 5ec:	80 5d       	subi	r24, 0xD0	; 208
 5ee:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_char((frequency%10)+48);
 5f2:	96 01       	movw	r18, r12
 5f4:	ce 01       	movw	r24, r28
 5f6:	88 0f       	add	r24, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	cc 0f       	add	r28, r28
 5fc:	dd 1f       	adc	r29, r29
 5fe:	cc 0f       	add	r28, r28
 600:	dd 1f       	adc	r29, r29
 602:	cc 0f       	add	r28, r28
 604:	dd 1f       	adc	r29, r29
 606:	8c 0f       	add	r24, r28
 608:	9d 1f       	adc	r25, r29
 60a:	28 1b       	sub	r18, r24
 60c:	39 0b       	sbc	r19, r25
 60e:	c9 01       	movw	r24, r18
 610:	80 5d       	subi	r24, 0xD0	; 208
 612:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_char>
	  LCD_vSend_string("HZ");
 616:	8c e6       	ldi	r24, 0x6C	; 108
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_vSend_string>
 61e:	06 c0       	rjmp	.+12     	; 0x62c <main+0x20a>
  }
  else 
  {
	  LCD_clearscreen();
 620:	0e 94 e6 01 	call	0x3cc	; 0x3cc <LCD_clearscreen>
	  LCD_vSend_string("out of range");
 624:	8f e6       	ldi	r24, 0x6F	; 111
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_vSend_string>
 62c:	ff cf       	rjmp	.-2      	; 0x62c <main+0x20a>

0000062e <__divsf3>:
 62e:	0e 94 2b 03 	call	0x656	; 0x656 <__divsf3x>
 632:	0c 94 0c 04 	jmp	0x818	; 0x818 <__fp_round>
 636:	0e 94 05 04 	call	0x80a	; 0x80a <__fp_pscB>
 63a:	58 f0       	brcs	.+22     	; 0x652 <__divsf3+0x24>
 63c:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_pscA>
 640:	40 f0       	brcs	.+16     	; 0x652 <__divsf3+0x24>
 642:	29 f4       	brne	.+10     	; 0x64e <__divsf3+0x20>
 644:	5f 3f       	cpi	r21, 0xFF	; 255
 646:	29 f0       	breq	.+10     	; 0x652 <__divsf3+0x24>
 648:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_inf>
 64c:	51 11       	cpse	r21, r1
 64e:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_szero>
 652:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_nan>

00000656 <__divsf3x>:
 656:	0e 94 1d 04 	call	0x83a	; 0x83a <__fp_split3>
 65a:	68 f3       	brcs	.-38     	; 0x636 <__divsf3+0x8>

0000065c <__divsf3_pse>:
 65c:	99 23       	and	r25, r25
 65e:	b1 f3       	breq	.-20     	; 0x64c <__divsf3+0x1e>
 660:	55 23       	and	r21, r21
 662:	91 f3       	breq	.-28     	; 0x648 <__divsf3+0x1a>
 664:	95 1b       	sub	r25, r21
 666:	55 0b       	sbc	r21, r21
 668:	bb 27       	eor	r27, r27
 66a:	aa 27       	eor	r26, r26
 66c:	62 17       	cp	r22, r18
 66e:	73 07       	cpc	r23, r19
 670:	84 07       	cpc	r24, r20
 672:	38 f0       	brcs	.+14     	; 0x682 <__divsf3_pse+0x26>
 674:	9f 5f       	subi	r25, 0xFF	; 255
 676:	5f 4f       	sbci	r21, 0xFF	; 255
 678:	22 0f       	add	r18, r18
 67a:	33 1f       	adc	r19, r19
 67c:	44 1f       	adc	r20, r20
 67e:	aa 1f       	adc	r26, r26
 680:	a9 f3       	breq	.-22     	; 0x66c <__divsf3_pse+0x10>
 682:	35 d0       	rcall	.+106    	; 0x6ee <__divsf3_pse+0x92>
 684:	0e 2e       	mov	r0, r30
 686:	3a f0       	brmi	.+14     	; 0x696 <__divsf3_pse+0x3a>
 688:	e0 e8       	ldi	r30, 0x80	; 128
 68a:	32 d0       	rcall	.+100    	; 0x6f0 <__divsf3_pse+0x94>
 68c:	91 50       	subi	r25, 0x01	; 1
 68e:	50 40       	sbci	r21, 0x00	; 0
 690:	e6 95       	lsr	r30
 692:	00 1c       	adc	r0, r0
 694:	ca f7       	brpl	.-14     	; 0x688 <__divsf3_pse+0x2c>
 696:	2b d0       	rcall	.+86     	; 0x6ee <__divsf3_pse+0x92>
 698:	fe 2f       	mov	r31, r30
 69a:	29 d0       	rcall	.+82     	; 0x6ee <__divsf3_pse+0x92>
 69c:	66 0f       	add	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	bb 1f       	adc	r27, r27
 6a4:	26 17       	cp	r18, r22
 6a6:	37 07       	cpc	r19, r23
 6a8:	48 07       	cpc	r20, r24
 6aa:	ab 07       	cpc	r26, r27
 6ac:	b0 e8       	ldi	r27, 0x80	; 128
 6ae:	09 f0       	breq	.+2      	; 0x6b2 <__divsf3_pse+0x56>
 6b0:	bb 0b       	sbc	r27, r27
 6b2:	80 2d       	mov	r24, r0
 6b4:	bf 01       	movw	r22, r30
 6b6:	ff 27       	eor	r31, r31
 6b8:	93 58       	subi	r25, 0x83	; 131
 6ba:	5f 4f       	sbci	r21, 0xFF	; 255
 6bc:	3a f0       	brmi	.+14     	; 0x6cc <__divsf3_pse+0x70>
 6be:	9e 3f       	cpi	r25, 0xFE	; 254
 6c0:	51 05       	cpc	r21, r1
 6c2:	78 f0       	brcs	.+30     	; 0x6e2 <__divsf3_pse+0x86>
 6c4:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_inf>
 6c8:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_szero>
 6cc:	5f 3f       	cpi	r21, 0xFF	; 255
 6ce:	e4 f3       	brlt	.-8      	; 0x6c8 <__divsf3_pse+0x6c>
 6d0:	98 3e       	cpi	r25, 0xE8	; 232
 6d2:	d4 f3       	brlt	.-12     	; 0x6c8 <__divsf3_pse+0x6c>
 6d4:	86 95       	lsr	r24
 6d6:	77 95       	ror	r23
 6d8:	67 95       	ror	r22
 6da:	b7 95       	ror	r27
 6dc:	f7 95       	ror	r31
 6de:	9f 5f       	subi	r25, 0xFF	; 255
 6e0:	c9 f7       	brne	.-14     	; 0x6d4 <__divsf3_pse+0x78>
 6e2:	88 0f       	add	r24, r24
 6e4:	91 1d       	adc	r25, r1
 6e6:	96 95       	lsr	r25
 6e8:	87 95       	ror	r24
 6ea:	97 f9       	bld	r25, 7
 6ec:	08 95       	ret
 6ee:	e1 e0       	ldi	r30, 0x01	; 1
 6f0:	66 0f       	add	r22, r22
 6f2:	77 1f       	adc	r23, r23
 6f4:	88 1f       	adc	r24, r24
 6f6:	bb 1f       	adc	r27, r27
 6f8:	62 17       	cp	r22, r18
 6fa:	73 07       	cpc	r23, r19
 6fc:	84 07       	cpc	r24, r20
 6fe:	ba 07       	cpc	r27, r26
 700:	20 f0       	brcs	.+8      	; 0x70a <__divsf3_pse+0xae>
 702:	62 1b       	sub	r22, r18
 704:	73 0b       	sbc	r23, r19
 706:	84 0b       	sbc	r24, r20
 708:	ba 0b       	sbc	r27, r26
 70a:	ee 1f       	adc	r30, r30
 70c:	88 f7       	brcc	.-30     	; 0x6f0 <__divsf3_pse+0x94>
 70e:	e0 95       	com	r30
 710:	08 95       	ret

00000712 <__fixunssfsi>:
 712:	0e 94 25 04 	call	0x84a	; 0x84a <__fp_splitA>
 716:	88 f0       	brcs	.+34     	; 0x73a <__fixunssfsi+0x28>
 718:	9f 57       	subi	r25, 0x7F	; 127
 71a:	98 f0       	brcs	.+38     	; 0x742 <__fixunssfsi+0x30>
 71c:	b9 2f       	mov	r27, r25
 71e:	99 27       	eor	r25, r25
 720:	b7 51       	subi	r27, 0x17	; 23
 722:	b0 f0       	brcs	.+44     	; 0x750 <__fixunssfsi+0x3e>
 724:	e1 f0       	breq	.+56     	; 0x75e <__fixunssfsi+0x4c>
 726:	66 0f       	add	r22, r22
 728:	77 1f       	adc	r23, r23
 72a:	88 1f       	adc	r24, r24
 72c:	99 1f       	adc	r25, r25
 72e:	1a f0       	brmi	.+6      	; 0x736 <__fixunssfsi+0x24>
 730:	ba 95       	dec	r27
 732:	c9 f7       	brne	.-14     	; 0x726 <__fixunssfsi+0x14>
 734:	14 c0       	rjmp	.+40     	; 0x75e <__fixunssfsi+0x4c>
 736:	b1 30       	cpi	r27, 0x01	; 1
 738:	91 f0       	breq	.+36     	; 0x75e <__fixunssfsi+0x4c>
 73a:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_zero>
 73e:	b1 e0       	ldi	r27, 0x01	; 1
 740:	08 95       	ret
 742:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__fp_zero>
 746:	67 2f       	mov	r22, r23
 748:	78 2f       	mov	r23, r24
 74a:	88 27       	eor	r24, r24
 74c:	b8 5f       	subi	r27, 0xF8	; 248
 74e:	39 f0       	breq	.+14     	; 0x75e <__fixunssfsi+0x4c>
 750:	b9 3f       	cpi	r27, 0xF9	; 249
 752:	cc f3       	brlt	.-14     	; 0x746 <__fixunssfsi+0x34>
 754:	86 95       	lsr	r24
 756:	77 95       	ror	r23
 758:	67 95       	ror	r22
 75a:	b3 95       	inc	r27
 75c:	d9 f7       	brne	.-10     	; 0x754 <__fixunssfsi+0x42>
 75e:	3e f4       	brtc	.+14     	; 0x76e <__fixunssfsi+0x5c>
 760:	90 95       	com	r25
 762:	80 95       	com	r24
 764:	70 95       	com	r23
 766:	61 95       	neg	r22
 768:	7f 4f       	sbci	r23, 0xFF	; 255
 76a:	8f 4f       	sbci	r24, 0xFF	; 255
 76c:	9f 4f       	sbci	r25, 0xFF	; 255
 76e:	08 95       	ret

00000770 <__floatunsisf>:
 770:	e8 94       	clt
 772:	09 c0       	rjmp	.+18     	; 0x786 <__floatsisf+0x12>

00000774 <__floatsisf>:
 774:	97 fb       	bst	r25, 7
 776:	3e f4       	brtc	.+14     	; 0x786 <__floatsisf+0x12>
 778:	90 95       	com	r25
 77a:	80 95       	com	r24
 77c:	70 95       	com	r23
 77e:	61 95       	neg	r22
 780:	7f 4f       	sbci	r23, 0xFF	; 255
 782:	8f 4f       	sbci	r24, 0xFF	; 255
 784:	9f 4f       	sbci	r25, 0xFF	; 255
 786:	99 23       	and	r25, r25
 788:	a9 f0       	breq	.+42     	; 0x7b4 <__floatsisf+0x40>
 78a:	f9 2f       	mov	r31, r25
 78c:	96 e9       	ldi	r25, 0x96	; 150
 78e:	bb 27       	eor	r27, r27
 790:	93 95       	inc	r25
 792:	f6 95       	lsr	r31
 794:	87 95       	ror	r24
 796:	77 95       	ror	r23
 798:	67 95       	ror	r22
 79a:	b7 95       	ror	r27
 79c:	f1 11       	cpse	r31, r1
 79e:	f8 cf       	rjmp	.-16     	; 0x790 <__floatsisf+0x1c>
 7a0:	fa f4       	brpl	.+62     	; 0x7e0 <__floatsisf+0x6c>
 7a2:	bb 0f       	add	r27, r27
 7a4:	11 f4       	brne	.+4      	; 0x7aa <__floatsisf+0x36>
 7a6:	60 ff       	sbrs	r22, 0
 7a8:	1b c0       	rjmp	.+54     	; 0x7e0 <__floatsisf+0x6c>
 7aa:	6f 5f       	subi	r22, 0xFF	; 255
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	16 c0       	rjmp	.+44     	; 0x7e0 <__floatsisf+0x6c>
 7b4:	88 23       	and	r24, r24
 7b6:	11 f0       	breq	.+4      	; 0x7bc <__floatsisf+0x48>
 7b8:	96 e9       	ldi	r25, 0x96	; 150
 7ba:	11 c0       	rjmp	.+34     	; 0x7de <__floatsisf+0x6a>
 7bc:	77 23       	and	r23, r23
 7be:	21 f0       	breq	.+8      	; 0x7c8 <__floatsisf+0x54>
 7c0:	9e e8       	ldi	r25, 0x8E	; 142
 7c2:	87 2f       	mov	r24, r23
 7c4:	76 2f       	mov	r23, r22
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <__floatsisf+0x5e>
 7c8:	66 23       	and	r22, r22
 7ca:	71 f0       	breq	.+28     	; 0x7e8 <__floatsisf+0x74>
 7cc:	96 e8       	ldi	r25, 0x86	; 134
 7ce:	86 2f       	mov	r24, r22
 7d0:	70 e0       	ldi	r23, 0x00	; 0
 7d2:	60 e0       	ldi	r22, 0x00	; 0
 7d4:	2a f0       	brmi	.+10     	; 0x7e0 <__floatsisf+0x6c>
 7d6:	9a 95       	dec	r25
 7d8:	66 0f       	add	r22, r22
 7da:	77 1f       	adc	r23, r23
 7dc:	88 1f       	adc	r24, r24
 7de:	da f7       	brpl	.-10     	; 0x7d6 <__floatsisf+0x62>
 7e0:	88 0f       	add	r24, r24
 7e2:	96 95       	lsr	r25
 7e4:	87 95       	ror	r24
 7e6:	97 f9       	bld	r25, 7
 7e8:	08 95       	ret

000007ea <__fp_inf>:
 7ea:	97 f9       	bld	r25, 7
 7ec:	9f 67       	ori	r25, 0x7F	; 127
 7ee:	80 e8       	ldi	r24, 0x80	; 128
 7f0:	70 e0       	ldi	r23, 0x00	; 0
 7f2:	60 e0       	ldi	r22, 0x00	; 0
 7f4:	08 95       	ret

000007f6 <__fp_nan>:
 7f6:	9f ef       	ldi	r25, 0xFF	; 255
 7f8:	80 ec       	ldi	r24, 0xC0	; 192
 7fa:	08 95       	ret

000007fc <__fp_pscA>:
 7fc:	00 24       	eor	r0, r0
 7fe:	0a 94       	dec	r0
 800:	16 16       	cp	r1, r22
 802:	17 06       	cpc	r1, r23
 804:	18 06       	cpc	r1, r24
 806:	09 06       	cpc	r0, r25
 808:	08 95       	ret

0000080a <__fp_pscB>:
 80a:	00 24       	eor	r0, r0
 80c:	0a 94       	dec	r0
 80e:	12 16       	cp	r1, r18
 810:	13 06       	cpc	r1, r19
 812:	14 06       	cpc	r1, r20
 814:	05 06       	cpc	r0, r21
 816:	08 95       	ret

00000818 <__fp_round>:
 818:	09 2e       	mov	r0, r25
 81a:	03 94       	inc	r0
 81c:	00 0c       	add	r0, r0
 81e:	11 f4       	brne	.+4      	; 0x824 <__fp_round+0xc>
 820:	88 23       	and	r24, r24
 822:	52 f0       	brmi	.+20     	; 0x838 <__fp_round+0x20>
 824:	bb 0f       	add	r27, r27
 826:	40 f4       	brcc	.+16     	; 0x838 <__fp_round+0x20>
 828:	bf 2b       	or	r27, r31
 82a:	11 f4       	brne	.+4      	; 0x830 <__fp_round+0x18>
 82c:	60 ff       	sbrs	r22, 0
 82e:	04 c0       	rjmp	.+8      	; 0x838 <__fp_round+0x20>
 830:	6f 5f       	subi	r22, 0xFF	; 255
 832:	7f 4f       	sbci	r23, 0xFF	; 255
 834:	8f 4f       	sbci	r24, 0xFF	; 255
 836:	9f 4f       	sbci	r25, 0xFF	; 255
 838:	08 95       	ret

0000083a <__fp_split3>:
 83a:	57 fd       	sbrc	r21, 7
 83c:	90 58       	subi	r25, 0x80	; 128
 83e:	44 0f       	add	r20, r20
 840:	55 1f       	adc	r21, r21
 842:	59 f0       	breq	.+22     	; 0x85a <__fp_splitA+0x10>
 844:	5f 3f       	cpi	r21, 0xFF	; 255
 846:	71 f0       	breq	.+28     	; 0x864 <__stack+0x5>
 848:	47 95       	ror	r20

0000084a <__fp_splitA>:
 84a:	88 0f       	add	r24, r24
 84c:	97 fb       	bst	r25, 7
 84e:	99 1f       	adc	r25, r25
 850:	61 f0       	breq	.+24     	; 0x86a <__stack+0xb>
 852:	9f 3f       	cpi	r25, 0xFF	; 255
 854:	79 f0       	breq	.+30     	; 0x874 <__stack+0x15>
 856:	87 95       	ror	r24
 858:	08 95       	ret
 85a:	12 16       	cp	r1, r18
 85c:	13 06       	cpc	r1, r19
 85e:	14 06       	cpc	r1, r20
 860:	55 1f       	adc	r21, r21
 862:	f2 cf       	rjmp	.-28     	; 0x848 <__fp_split3+0xe>
 864:	46 95       	lsr	r20
 866:	f1 df       	rcall	.-30     	; 0x84a <__fp_splitA>
 868:	08 c0       	rjmp	.+16     	; 0x87a <__stack+0x1b>
 86a:	16 16       	cp	r1, r22
 86c:	17 06       	cpc	r1, r23
 86e:	18 06       	cpc	r1, r24
 870:	99 1f       	adc	r25, r25
 872:	f1 cf       	rjmp	.-30     	; 0x856 <__fp_splitA+0xc>
 874:	86 95       	lsr	r24
 876:	71 05       	cpc	r23, r1
 878:	61 05       	cpc	r22, r1
 87a:	08 94       	sec
 87c:	08 95       	ret

0000087e <__fp_zero>:
 87e:	e8 94       	clt

00000880 <__fp_szero>:
 880:	bb 27       	eor	r27, r27
 882:	66 27       	eor	r22, r22
 884:	77 27       	eor	r23, r23
 886:	cb 01       	movw	r24, r22
 888:	97 f9       	bld	r25, 7
 88a:	08 95       	ret

0000088c <__mulsf3>:
 88c:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__mulsf3x>
 890:	0c 94 0c 04 	jmp	0x818	; 0x818 <__fp_round>
 894:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_pscA>
 898:	38 f0       	brcs	.+14     	; 0x8a8 <__mulsf3+0x1c>
 89a:	0e 94 05 04 	call	0x80a	; 0x80a <__fp_pscB>
 89e:	20 f0       	brcs	.+8      	; 0x8a8 <__mulsf3+0x1c>
 8a0:	95 23       	and	r25, r21
 8a2:	11 f0       	breq	.+4      	; 0x8a8 <__mulsf3+0x1c>
 8a4:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_inf>
 8a8:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_nan>
 8ac:	11 24       	eor	r1, r1
 8ae:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_szero>

000008b2 <__mulsf3x>:
 8b2:	0e 94 1d 04 	call	0x83a	; 0x83a <__fp_split3>
 8b6:	70 f3       	brcs	.-36     	; 0x894 <__mulsf3+0x8>

000008b8 <__mulsf3_pse>:
 8b8:	95 9f       	mul	r25, r21
 8ba:	c1 f3       	breq	.-16     	; 0x8ac <__mulsf3+0x20>
 8bc:	95 0f       	add	r25, r21
 8be:	50 e0       	ldi	r21, 0x00	; 0
 8c0:	55 1f       	adc	r21, r21
 8c2:	62 9f       	mul	r22, r18
 8c4:	f0 01       	movw	r30, r0
 8c6:	72 9f       	mul	r23, r18
 8c8:	bb 27       	eor	r27, r27
 8ca:	f0 0d       	add	r31, r0
 8cc:	b1 1d       	adc	r27, r1
 8ce:	63 9f       	mul	r22, r19
 8d0:	aa 27       	eor	r26, r26
 8d2:	f0 0d       	add	r31, r0
 8d4:	b1 1d       	adc	r27, r1
 8d6:	aa 1f       	adc	r26, r26
 8d8:	64 9f       	mul	r22, r20
 8da:	66 27       	eor	r22, r22
 8dc:	b0 0d       	add	r27, r0
 8de:	a1 1d       	adc	r26, r1
 8e0:	66 1f       	adc	r22, r22
 8e2:	82 9f       	mul	r24, r18
 8e4:	22 27       	eor	r18, r18
 8e6:	b0 0d       	add	r27, r0
 8e8:	a1 1d       	adc	r26, r1
 8ea:	62 1f       	adc	r22, r18
 8ec:	73 9f       	mul	r23, r19
 8ee:	b0 0d       	add	r27, r0
 8f0:	a1 1d       	adc	r26, r1
 8f2:	62 1f       	adc	r22, r18
 8f4:	83 9f       	mul	r24, r19
 8f6:	a0 0d       	add	r26, r0
 8f8:	61 1d       	adc	r22, r1
 8fa:	22 1f       	adc	r18, r18
 8fc:	74 9f       	mul	r23, r20
 8fe:	33 27       	eor	r19, r19
 900:	a0 0d       	add	r26, r0
 902:	61 1d       	adc	r22, r1
 904:	23 1f       	adc	r18, r19
 906:	84 9f       	mul	r24, r20
 908:	60 0d       	add	r22, r0
 90a:	21 1d       	adc	r18, r1
 90c:	82 2f       	mov	r24, r18
 90e:	76 2f       	mov	r23, r22
 910:	6a 2f       	mov	r22, r26
 912:	11 24       	eor	r1, r1
 914:	9f 57       	subi	r25, 0x7F	; 127
 916:	50 40       	sbci	r21, 0x00	; 0
 918:	9a f0       	brmi	.+38     	; 0x940 <__mulsf3_pse+0x88>
 91a:	f1 f0       	breq	.+60     	; 0x958 <__mulsf3_pse+0xa0>
 91c:	88 23       	and	r24, r24
 91e:	4a f0       	brmi	.+18     	; 0x932 <__mulsf3_pse+0x7a>
 920:	ee 0f       	add	r30, r30
 922:	ff 1f       	adc	r31, r31
 924:	bb 1f       	adc	r27, r27
 926:	66 1f       	adc	r22, r22
 928:	77 1f       	adc	r23, r23
 92a:	88 1f       	adc	r24, r24
 92c:	91 50       	subi	r25, 0x01	; 1
 92e:	50 40       	sbci	r21, 0x00	; 0
 930:	a9 f7       	brne	.-22     	; 0x91c <__mulsf3_pse+0x64>
 932:	9e 3f       	cpi	r25, 0xFE	; 254
 934:	51 05       	cpc	r21, r1
 936:	80 f0       	brcs	.+32     	; 0x958 <__mulsf3_pse+0xa0>
 938:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_inf>
 93c:	0c 94 40 04 	jmp	0x880	; 0x880 <__fp_szero>
 940:	5f 3f       	cpi	r21, 0xFF	; 255
 942:	e4 f3       	brlt	.-8      	; 0x93c <__mulsf3_pse+0x84>
 944:	98 3e       	cpi	r25, 0xE8	; 232
 946:	d4 f3       	brlt	.-12     	; 0x93c <__mulsf3_pse+0x84>
 948:	86 95       	lsr	r24
 94a:	77 95       	ror	r23
 94c:	67 95       	ror	r22
 94e:	b7 95       	ror	r27
 950:	f7 95       	ror	r31
 952:	e7 95       	ror	r30
 954:	9f 5f       	subi	r25, 0xFF	; 255
 956:	c1 f7       	brne	.-16     	; 0x948 <__mulsf3_pse+0x90>
 958:	fe 2b       	or	r31, r30
 95a:	88 0f       	add	r24, r24
 95c:	91 1d       	adc	r25, r1
 95e:	96 95       	lsr	r25
 960:	87 95       	ror	r24
 962:	97 f9       	bld	r25, 7
 964:	08 95       	ret

00000966 <__udivmodsi4>:
 966:	a1 e2       	ldi	r26, 0x21	; 33
 968:	1a 2e       	mov	r1, r26
 96a:	aa 1b       	sub	r26, r26
 96c:	bb 1b       	sub	r27, r27
 96e:	fd 01       	movw	r30, r26
 970:	0d c0       	rjmp	.+26     	; 0x98c <__udivmodsi4_ep>

00000972 <__udivmodsi4_loop>:
 972:	aa 1f       	adc	r26, r26
 974:	bb 1f       	adc	r27, r27
 976:	ee 1f       	adc	r30, r30
 978:	ff 1f       	adc	r31, r31
 97a:	a2 17       	cp	r26, r18
 97c:	b3 07       	cpc	r27, r19
 97e:	e4 07       	cpc	r30, r20
 980:	f5 07       	cpc	r31, r21
 982:	20 f0       	brcs	.+8      	; 0x98c <__udivmodsi4_ep>
 984:	a2 1b       	sub	r26, r18
 986:	b3 0b       	sbc	r27, r19
 988:	e4 0b       	sbc	r30, r20
 98a:	f5 0b       	sbc	r31, r21

0000098c <__udivmodsi4_ep>:
 98c:	66 1f       	adc	r22, r22
 98e:	77 1f       	adc	r23, r23
 990:	88 1f       	adc	r24, r24
 992:	99 1f       	adc	r25, r25
 994:	1a 94       	dec	r1
 996:	69 f7       	brne	.-38     	; 0x972 <__udivmodsi4_loop>
 998:	60 95       	com	r22
 99a:	70 95       	com	r23
 99c:	80 95       	com	r24
 99e:	90 95       	com	r25
 9a0:	9b 01       	movw	r18, r22
 9a2:	ac 01       	movw	r20, r24
 9a4:	bd 01       	movw	r22, r26
 9a6:	cf 01       	movw	r24, r30
 9a8:	08 95       	ret

000009aa <__umulhisi3>:
 9aa:	a2 9f       	mul	r26, r18
 9ac:	b0 01       	movw	r22, r0
 9ae:	b3 9f       	mul	r27, r19
 9b0:	c0 01       	movw	r24, r0
 9b2:	a3 9f       	mul	r26, r19
 9b4:	70 0d       	add	r23, r0
 9b6:	81 1d       	adc	r24, r1
 9b8:	11 24       	eor	r1, r1
 9ba:	91 1d       	adc	r25, r1
 9bc:	b2 9f       	mul	r27, r18
 9be:	70 0d       	add	r23, r0
 9c0:	81 1d       	adc	r24, r1
 9c2:	11 24       	eor	r1, r1
 9c4:	91 1d       	adc	r25, r1
 9c6:	08 95       	ret

000009c8 <_exit>:
 9c8:	f8 94       	cli

000009ca <__stop_program>:
 9ca:	ff cf       	rjmp	.-2      	; 0x9ca <__stop_program>
